import java.util.ArrayList;
import java.util.Scanner;

public class Solution{

	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int V = s.nextInt();
		int E = s.nextInt();

		/* Write Your Code Here
		 * Complete the Rest of the Program
		 * You have to take input and print the output yourself
		 */
		int edges[][]=new int[V][V];
		for(int i=0;i<E;i++) {
			int a=s.nextInt();
			int b=s.nextInt();
			edges[a][b]=1;
			edges[b][a]=1;
			
		}
		int start=s.nextInt();
		int end=s.nextInt();
		boolean visited[]=new boolean[V];
		ArrayList<Integer> ans=getpathdfs(edges,start,end,visited);
		if(ans==null) {
			return ;
		}
		for(int i=0;i<ans.size();i++) {
			System.out.print(ans.get(i)+" ");
		}
	}

	private static ArrayList<Integer> getpathdfs(int[][] edges, int start, int end, boolean[] visited) {
		// TODO Auto-generated method stub
		if(start==end) {
			ArrayList<Integer> ans=new ArrayList<>();
			ans.add(end);
			return ans;
		}
		visited[start]=true;
		for(int i=0;i<edges.length;i++) {
			if(edges[start][i]==1) {
				if(visited[i]!=true) {
					ArrayList<Integer> output=getpathdfs(edges,i,end,visited);
					if(output!=null) {
						output.add(start);
						return output;
					}
				}
			}
		}

		return null;
		
		
	}
}