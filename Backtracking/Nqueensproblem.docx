import java.util.Scanner;


public class Nqueensproblem {

	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int n = s.nextInt();
		placeNQueens(n);	
	}

	private static void placeNQueens(int n) {
		// TODO Auto-generate method stub
//		there is no possibility that we can place n queens without killing each other in case of n<4
		if(n<4) {
			return ;
		}
		else {
			int[][] board=new int[n][n];
			placenqueens(board,0,n);
		}
	
	}

	private static void placenqueens(int[][] board, int row,int n) {
		// TODO Auto-generated method stub
		if(row==n) {
			for (int i = 0; i < n; i++)  
		    {  
		        for (int j = 0; j < n; j++) {
		        	
		        	System.out.print(board[i][j]+" ");
		        	
		        }
		    }
		 System.out.println();
			
		}
		for(int i=0;i<n;i++) {
			if(issafe(board,row,i)) {
				board[row][i]=1;
			   placenqueens(board,row+1,n);
				board[row][i]=0;
				
			
			}
		}
		
		
		
	}

	private static boolean issafe(int board[][], int row, int col )
	{ 
		int n = board.length; 
		for(int i = row - 1, j = col - 1 ; i >= 0 && j >= 0; i--,j--)
		{ 
			if(board[i][j] == 1)
			{ 
				return false; 
				}
			} 
		for(int i = row + 1, j = col + 1 ; i < n && j < n ; i++,j++){ if(board[i][j] == 1)
		{
			return false; 
			}
		} 
		for(int i = row - 1, j = col + 1 ; i >= 0 && j < n; i--,j++)
		{ 
			if(board[i][j] == 1)
			{ 
				return false; 
				} 
			}
		for(int i = row + 1, j = col - 1 ; i < n && j >= 0; i++,j--)
		{
			if(board[i][j] == 1)
			{ 
				return false; 
				}
			} 
		for(int i = row -1; i >= 0; i--)
		{ 
			if(board[i][col] == 1)
			{ 
				return false;
				} 
			} 
		for(int i = row +1; i < n; i++)
		{ 
			if(board[i][col] == 1)
			{ 
				return false;
				}
			}
		return true; 
		}

}
