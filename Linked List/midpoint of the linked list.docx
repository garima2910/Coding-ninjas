

import java.util.Scanner;

public class Midpointoflinkedlist {
	private static Scanner s = new Scanner(System.in);

	public static void main(String[] args) {
		System.out.println(printMiddel(input()) + "");
	}
	public static int length(LinkedListNode<Integer> head) {
		int count =0;
		while(head!=null) {
			count++;
			head=head.next;
			
		}
		return count;
	}

	private static int  printMiddel(LinkedListNode<Integer> head) {
		// TODO Auto-generated method stub
		int value=length(head)/2;
		int i=0;
		LinkedListNode<Integer> temp=head;
		while(temp!=null) {
		if(i==value) {
			return temp.data;
			
		}
		else{
			temp=temp.next;
			i++;
		}
		
		
		}
		return -1;
		
	
	}


	public static LinkedListNode<Integer> input() {
		int data = s.nextInt();
		
		LinkedListNode<Integer> head = null;
		LinkedListNode<Integer> tail = null;
		while (data!=-1) {
			LinkedListNode<Integer> newNode = new LinkedListNode<Integer>(data);
			if (head == null) {
				head = newNode;
				tail = newNode;
			} else {
				tail.next = newNode;
				tail = newNode;
			}
			data = s.nextInt();
		}
		return head;
	}
}

class LinkedListNode<T> {
	public T data;
	public LinkedListNode<T> next;

	public LinkedListNode(T data) {
		this.setData(data);
		this.next = null;
	}

	public T getData() {
		return data;
	}

	public void setData(T data) {
		this.data = data;
	}

}
